shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
head(seanseCzyste)
ggplot(seanseCzyste, aes(x = data, y = Klient.indywidualny, color=Godzina)) +
geom_point() + geom_smooth(size=3, se=FALSE, method="loess", span=wygladzenie) +
ggtitle(paste("Seans:", tylkoTytul))+
ylim(0,140)
wygladzenie=1
ggplot(seanseCzyste, aes(x = data, y = Klient.indywidualny, color=Godzina)) +
geom_point() + geom_smooth(size=3, se=FALSE, method="loess", span=wygladzenie) +
ggtitle(paste("Seans:", tylkoTytul))+
ylim(0,140)
head(seanseCzyste)
seanseCzyste %>%
group_by(Godzina) %>%
summarise(srednia = mean(Klient.indywidualny, na.rm=TRUE))
ggplot(seanseCzyste, aes(x = data, y = Klient.indywidualny, color=Godzina)) +
geom_point() + geom_smooth(size=3, se=FALSE, method="loess", span=wygladzenie) +
ggtitle(paste("Seans:", tylkoTytul))+
ylim(0,140)+
geom_vline(aes(xintercept=50))
ggplot(seanseCzyste, aes(x = data, y = Klient.indywidualny, color=Godzina)) +
geom_point() + geom_smooth(size=3, se=FALSE, method="loess", span=wygladzenie) +
ggtitle(paste("Seans:", tylkoTytul))+
ylim(0,140)+
geom_hline(aes(yintercept=50))
ggplot(seanseCzyste, aes(x = data, y = Klient.indywidualny, color=Godzina)) +
geom_point() + geom_smooth(size=3, se=FALSE, method="loess", span=wygladzenie) +
ggtitle(paste("Seans:", tylkoTytul))+
ylim(0,140)+
geom_hline(data=srednie, aes(yintercept=srednia))
srednie <- seanseCzyste %>%
group_by(Godzina) %>%
summarise(srednia = mean(Klient.indywidualny, na.rm=TRUE))
ggplot(seanseCzyste, aes(x = data, y = Klient.indywidualny, color=Godzina)) +
geom_point() + geom_smooth(size=3, se=FALSE, method="loess", span=wygladzenie) +
ggtitle(paste("Seans:", tylkoTytul))+
ylim(0,140)+
geom_hline(data=srednie, aes(yintercept=srednia))
ggplot(seanseCzyste, aes(x = data, y = Klient.indywidualny)) +
geom_point(aes(color=Godzina)) + geom_smooth(size=3, se=FALSE, method="loess", span=wygladzenie) +
ggtitle(paste("Seans:", tylkoTytul))+
ylim(0,140)+
geom_hline(data=srednie, aes(yintercept=srednia, color=Godzina))
head()
head(seanseCzyste)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
slownik <- unique(substr(daneCzyste$Kategoria...Data, 6,10))
names(slownik) <- slownik
slownik[] = "--"
slownik["05-01"] = "poczatekMaja"
slownik["05-02"] = "poczatekMaja"
slownik["05-03"] = "poczatekMaja"
slownik["05-04"] = "poczatekMaja"
slownik["02-14"] = "walentynki"
slownik["12-27"] = "koniecRoku"
slownik["12-28"] = "koniecRoku"
slownik["12-29"] = "koniecRoku"
slownik["12-30"] = "koniecRoku"
slownik["06-01"] = "swietoDzieci"
slownik["03-08"] = "swietoDzieci"
slownik["12-06"] = "swietoDzieci"
daneCzyste <- dane %>%
filter(ŁĄCZNIE > 0,
Kategoria...Data > "2012-01-01",
!is.na(Klient.indywidualny)) %>%
mutate(miesiac_ = factor(substr(Kategoria...Data, 6,7)),
dzienTygodnia_ = factor(factor(wday(ymd(Kategoria...Data), label=TRUE), labels=c("Sun", "Other", "Other","Other", "Fri", "Sat")), levels=c("Other", "Fri", "Sat", "Sun"), ordered=FALSE),
pokazow = 10 - is.na(Pokaz.PLA.9) - is.na(Pokaz.PLA.10),
biletowNaSeansIndywidualni = pmin(Klient.indywidualny/pokazow, 140),
ferie_ = factor(mazowieckie + 2*(łódzkie) + 3*(małopolskie), labels=c("--", "mazowieckie", "lodzkie", "malopolskie")),
datySpecjalne_ = factor(slownik[substr(Kategoria...Data, 6,10)]))
summary(model <- lm(biletowNaSeansIndywidualni ~ dzienTygodnia_*(miesiac_ + ferie_ + datySpecjalne_), data=daneCzyste))
t(t(round(coef(model),1)))
input$dataPredykcja = "2014-11-17"
ymd(as.character(input$dataPredykcja))
wday(ymd(as.character(input$dataPredykcja)))
factor(wday(ymd(as.character(input$dataPredykcja))),
levels=1:7, labels=c("Sun", "Other", "Other","Other", "Fri", "Sat"))
factor(wday(ymd(as.character(input$dataPredykcja))),
levels=1:7, labels=c("Sun", "Other", "Other", "Other","Other", "Fri", "Sat"))
factor(factor(wday(ymd(as.character(input$dataPredykcja))),
levels=1:7, labels=c("Sun", "Other", "Other", "Other","Other", "Fri", "Sat")))
datySpecjalne_ <- factor(slownik[substr(ddzien, 6,10)])
ddzien <- as.character(input$dataPredykcja)
miesiac_ <- factor(substr(ddzien, 6,7))
dzienTygodnia_ <- factor(wday(ymd(ddzien)),
levels=1:7, labels=c("Sun", "Other", "Other", "Other","Other", "Fri", "Sat"))
datySpecjalne_ <- factor(slownik[substr(ddzien, 6,10)])
datySpecjalne_
paste0("2013-",substr(ddzien, 6,10))
daneCzyste[daneCzyste$Kategoria...Data == paste0("2012-",substr(ddzien, 6,10)),]
daneCzyste[daneCzyste$Kategoria...Data == paste0("2012-",substr(ddzien, 6,10)),c("mazowieckie", "łódzkie", "małopolskie")]
ff <- daneCzyste[daneCzyste$Kategoria...Data == paste0("2012-",substr(ddzien, 6,10)),c("mazowieckie", "łódzkie", "małopolskie")]
ff %*% c(1,2,3)
t(ff) %*% c(1,2,3)
t(ff) %*% t(c(1,2,3))
ff %*% t(c(1,2,3))
t(ff) %*% t(c(1,2,3))
t(t(ff)) %*% c(1,2,3)
t(t(ff)) %*% c(1,2,3)[1,1]
t(t(ff)) %*% c(1,2,3)[1]
t(t(ff)) %*% c(1,2,3)
data.frame(
ddzien = as.character(input$dataPredykcja),
miesiac_ = factor(substr(ddzien, 6,7)),
dzienTygodnia_ = factor(wday(ymd(ddzien)),
levels=1:7, labels=c("Sun", "Other", "Other", "Other","Other", "Fri", "Sat")),
datySpecjalne_ = factor(slownik[substr(ddzien, 6,10)])
)
pr <- predict(modelKalendarzowy, newdata=ndfp, se.fit=TRUE, interval="prediction")
summary(modelKalendarzowy <- lm(biletowNaSeansIndywidualni ~ dzienTygodnia_*(miesiac_ + ferie_ + datySpecjalne_), data=daneCzyste))
modelKalendarzowy <- lm(biletowNaSeansIndywidualni ~ dzienTygodnia_*(miesiac_ + ferie_ + datySpecjalne_), data=daneCzyste)
pr <- predict(modelKalendarzowy, newdata=ndfp, se.fit=TRUE, interval="prediction")
ddzien = as.character(input$dataPredykcja)
ff <- daneCzyste[daneCzyste$Kategoria...Data == paste0("2012-",substr(ddzien, 6,10)),c("mazowieckie", "łódzkie", "małopolskie")]
ndfp <- data.frame(
miesiac_ = factor(substr(ddzien, 6,7)),
dzienTygodnia_ = factor(wday(ymd(ddzien)),
levels=1:7, labels=c("Sun", "Other", "Other", "Other","Other", "Fri", "Sat")),
datySpecjalne_ = factor(slownik[substr(ddzien, 6,10)]),
ferie_ <- factor(t(t(ff)) %*% c(1,2,3),
levels=0:3,
labels=c("--", "mazowieckie", "lodzkie", "malopolskie"))
)
ndfp <- data.frame(
miesiac_ = factor(substr(ddzien, 6,7)),
dzienTygodnia_ = factor(wday(ymd(ddzien)),
levels=1:7, labels=c("Sun", "Other", "Other", "Other","Other", "Fri", "Sat")),
datySpecjalne_ = factor(slownik[substr(ddzien, 6,10)]),
ferie_ = factor(t(t(ff)) %*% c(1,2,3),
levels=0:3,
labels=c("--", "mazowieckie", "lodzkie", "malopolskie"))
)
pr <- predict(modelKalendarzowy, newdata=ndfp, se.fit=TRUE, interval="prediction")
pr
?predict
pr <- predict(modelKalendarzowy, newdata=ndfp, se.fit=TRUE, interval="prediction", level=0.5)
pr
pr50 <- predict(modelKalendarzowy, newdata=ndfp, se.fit=TRUE, interval="prediction", level=0.5)
pr90 <- predict(modelKalendarzowy, newdata=ndfp, se.fit=TRUE, interval="prediction", level=0.9)
c(pr50, pr90[2:3])
c(pr50$fit, pr90$fit[2:3])
pmin(pmax(c(pr50$fit, pr90$fit[2:3]), 0, 140)
pmin(pmax(c(pr50$fit, pr90$fit[2:3]), 0), 140)
tmpp <- round(pmin(pmax(c(pr50$fit, pr90$fit[2:3]), 0), 140))
tmpp
paste0("Predykcja sprzedaży: ", tmpp[1], ". ",
"Przedział ufności 50% (", tmpp[2], " - ", tmpp[3],"). ",
"Przedział ufności 90% (", tmpp[4], " - ", tmpp[5],"). ")
shiny::runApp()
ndfp
shiny::runApp()
shiny::runApp()
?renderText
?renderUI
shiny::runApp()
ddzien = "2014-11-19"
ff <- daneCzyste[daneCzyste$Kategoria...Data == paste0("2012-",substr(ddzien, 6,10)),c("mazowieckie", "łódzkie", "małopolskie")]
ff
paste0("2012-",substr(ddzien, 6,10))
dane[dane$Kategoria...Data == paste0("2012-",substr(ddzien, 6,10)),c("mazowieckie", "łódzkie", "małopolskie")]
shiny::runApp()
shiny::runApp()
shiny::runApp()
?geom_boxplot
tmpp
names(tmpp) = c("low", "mid", "upp", "ymax", "ymin")
tmpp <- as.data.frame(round(pmin(pmax(c(pr50$fit, pr90$fit[2:3]), 0), 140)))
tmpp
tmpp <- as.data.frame(as.list(round(pmin(pmax(c(pr50$fit, pr90$fit[2:3]), 0), 140))))
tmpp
tmpp <- data.frame(as.list(round(pmin(pmax(c(pr50$fit, pr90$fit[2:3]), 0), 140))))
tmpp
names(tmpp) = c("low", "mid", "upp", "ymax", "ymin")
tmpp <- data.frame(as.list(round(pmin(pmax(c(pr50$fit, pr90$fit[2:3]), 0), 140))))
colnames(tmpp) = c("low", "mid", "upp", "ymax", "ymin")
tmpp
tmpp <- data.frame(as.list(round(pmin(pmax(c(pr50$fit, pr90$fit[2:3]), 0), 140))))
colnames(tmpp) = c("mid", "low", "upp", "ymin", "ymax")
ggplot(tmpp, aes(lower=low, middle=mid, upper=upp, ymin=ymin, ymax=ymax)) +
geom_boxplot()
ggplot(tmpp, aes(lower=low, middle=mid, upper=upp, ymin=ymin, ymax=ymax)) +
geom_boxplot(stat="identity")
tmpp
ggplot(tmpp, aes(x=1, lower=low, middle=mid, upper=upp, ymin=ymin, ymax=ymax)) +
geom_boxplot(stat="identity")
ggplot(tmpp, aes(x=0, lower=low, middle=mid, upper=upp, ymin=ymin, ymax=ymax)) +
geom_boxplot(stat="identity") + coord_flip() +
xlim(0,140)
ggplot(tmpp, aes(x=0, lower=low, middle=mid, upper=upp, ymin=ymin, ymax=ymax)) +
geom_boxplot(stat="identity") + coord_flip() +
ylim(0,140)
ggplot(tmpp, aes(x=0, lower=low, middle=mid, upper=upp, ymin=ymin, ymax=ymax)) +
geom_boxplot(stat="identity") + coord_flip() +
ylim(0,140) + xlab("")
?theme
ggplot(tmpp, aes(x=0, lower=low, middle=mid, upper=upp, ymin=ymin, ymax=ymax)) +
geom_boxplot(stat="identity") + coord_flip() +
ylim(0,140) + xlab("") +
theme(axis.ticks.x = element_blank())
?theme
ggplot(tmpp, aes(x=0, lower=low, middle=mid, upper=upp, ymin=ymin, ymax=ymax)) +
geom_boxplot(stat="identity") + coord_flip() +
ylim(0,140) + xlab("") +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank())
shiny::runApp()
shiny::runApp()
?theme
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
ggplot(tmpp, aes(x=0, lower=low, middle=mid, upper=upp, ymin=ymin, ymax=ymax)) +
geom_boxplot(stat="identity") + coord_flip() +
scale_y_continuous(brekes=seq(0,140,20)) + xlab("") +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
ggplot(tmpp, aes(x=0, lower=low, middle=mid, upper=upp, ymin=ymin, ymax=ymax)) +
geom_boxplot(stat="identity") + coord_flip() +
scale_y_continuous(breaks=seq(0,140,20)) + xlab("") +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
ggplot(tmpp, aes(x=0, lower=low, middle=mid, upper=upp, ymin=ymin, ymax=ymax)) +
geom_boxplot(stat="identity") + coord_flip() +
scale_y_continuous(breaks=seq(0,140,20), limits=c(0,140)) + xlab("") +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
shiny::runApp()
shiny::runApp()
daneCzyste$Kategoria...Data
shiny::runApp()
ddzien="2014-12-31"
ff <- dane[dane$Kategoria...Data == paste0("2012-",substr(ddzien, 6,10)),c("mazowieckie", "łódzkie", "małopolskie")]
ff
ndfp <- data.frame(
miesiac_ = factor(substr(ddzien, 6,7)),
dzienTygodnia_ = factor(wday(ymd(ddzien)),
levels=1:7, labels=c("Sun", "Other", "Other", "Other","Other", "Fri", "Sat")),
datySpecjalne_ = factor(slownik[substr(ddzien, 6,10)]),
ferie_ = factor(t(t(ff)) %*% c(1,2,3),
levels=0:3,
labels=c("--", "mazowieckie", "lodzkie", "malopolskie"))
)
pr50 <- predict(modelKalendarzowy, newdata=ndfp, se.fit=TRUE, interval="prediction", level=0.5)
pr90 <- predict(modelKalendarzowy, newdata=ndfp, se.fit=TRUE, interval="prediction", level=0.9)
tmpp <- data.frame(as.list(round(pmin(pmax(c(pr50$fit, pr90$fit[2:3]), 0), 140))))
colnames(tmpp) = c("mid", "low", "upp", "ymin", "ymax")
tmpp
ddzien
ddzien="2014-12-25"
ff <- dane[dane$Kategoria...Data == paste0("2012-",substr(ddzien, 6,10)),c("mazowieckie", "łódzkie", "małopolskie")]
ff
dane$Kategoria...Data
shiny::runApp()
shiny::runApp()
factor(substr(ddzien, 6,7))
factor(wday(ymd(ddzien)),
levels=1:7, labels=c("Sun", "Other", "Other", "Other","Other", "Fri", "Sat"))
factor(slownik[substr(ddzien, 6,10)])
slownik
ff <- dane[dane$Kategoria...Data == paste0("2012-",substr(ddzien, 6,10)),c("mazowieckie", "łódzkie", "małopolskie")]
pr50 <- predict(modelKalendarzowy, newdata=ndfp, se.fit=TRUE, interval="prediction", level=0.5)
pr90 <- predict(modelKalendarzowy, newdata=ndfp, se.fit=TRUE, interval="prediction", level=0.9)
tmpp <- data.frame(as.list(round(pmin(pmax(c(pr50$fit, pr90$fit[2:3]), 0), 140))))
colnames(tmpp) = c("mid", "low", "upp", "ymin", "ymax")
ggplot(tmpp, aes(x=0, lower=low, middle=mid, upper=upp, ymin=ymin, ymax=ymax)) +
geom_boxplot(stat="identity") + coord_flip() +
scale_y_continuous(breaks=seq(0,140,20), limits=c(0,140)) + xlab("") +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
ddzien="2014-12-31"
ff <- dane[dane$Kategoria...Data == paste0("2012-",substr(ddzien, 6,10)),c("mazowieckie", "łódzkie", "małopolskie")]
ndfp <- data.frame(
miesiac_ = factor(substr(ddzien, 6,7)),
dzienTygodnia_ = factor(wday(ymd(ddzien)),
levels=1:7, labels=c("Sun", "Other", "Other", "Other","Other", "Fri", "Sat")),
datySpecjalne_ = factor(slownik[substr(ddzien, 6,10)]),
ferie_ = factor(t(t(ff)) %*% c(1,2,3),
levels=0:3,
labels=c("--", "mazowieckie", "lodzkie", "malopolskie"))
)
pr50 <- predict(modelKalendarzowy, newdata=ndfp, se.fit=TRUE, interval="prediction", level=0.5)
pr90 <- predict(modelKalendarzowy, newdata=ndfp, se.fit=TRUE, interval="prediction", level=0.9)
tmpp <- data.frame(as.list(round(pmin(pmax(c(pr50$fit, pr90$fit[2:3]), 0), 140))))
colnames(tmpp) = c("mid", "low", "upp", "ymin", "ymax")
ggplot(tmpp, aes(x=0, lower=low, middle=mid, upper=upp, ymin=ymin, ymax=ymax)) +
geom_boxplot(stat="identity") + coord_flip() +
scale_y_continuous(breaks=seq(0,140,20), limits=c(0,140)) + xlab("") +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
shiny::runApp()
load("reklamy.rda")
load("swieta.rda")
load("wizyty.rda")
load("seanse.rda")
ppv <- function(x) {
ifelse(x < 0.001, "***",
ifelse(x < 0.01, "**",
ifelse(x < 0.03, "*",
ifelse(x < 0.1, ".", ""
))))
}
colnames(wizyty) <- paste0(".",colnames(wizyty))
swieta[,-(1:3)][is.na(swieta[,-(1:3)])] <- 0
dane <- cbind(reklamy, swieta[,-1], wizyty[,-1])
daneCzyste <- dane %>%
filter(ŁĄCZNIE > 0) %>%
mutate(dataRok = ymd(paste0(2013,substr(Kategoria...Data, 5,10))),
miesiac = substr(Kategoria...Data, 6,7),
wakacje = ifelse(miesiac %in% c("07", "08"),miesiac, "--"),
dtyg = factor(wday(ymd(Kategoria...Data), label=TRUE), ordered = FALSE),
weekend = dtyg %in% c("Sat", "Sun")) %>%
mutate(pokazow = 10 - is.na(Pokaz.PLA.9) - is.na(Pokaz.PLA.10),
biletowNaSeans = pmin(ŁĄCZNIE/pokazow, 140),
biletowNaSeansIndywidualni = pmin(Klient.indywidualny/pokazow, 140),
biletowNaSeansDorosli = pmin(Dorośli/pokazow, 140),
biletowNaSeansDzieci = pmin(Dzieci/pokazow, 140),
biletowNaSeansSeniorzy = pmin(Seniorzy/pokazow, 140),
biletowNaSeansStudenci = pmin(Studenci.i.doktoranci/pokazow, 140),
wolneMiejsca = 140 - biletowNaSeans)
# dodanie wyczyszczonych zmiennych dot. kalendarza
daneCzyste$dniWolne    <- !is.na(daneCzyste$Dni.wolne..święta)
daneCzyste$dniRocznice <- !is.na(daneCzyste$Rocznice..święta..np..Dzień.Babci..)
daneCzyste$ferie <- apply(daneCzyste[,which(colnames(daneCzyste) == "dolnośląskie"):which(colnames(daneCzyste) == "zachodniopomorskie")], 1, max)
slownik <- unique(substr(daneCzyste$Kategoria...Data, 6,10))
names(slownik) <- slownik
slownik[] = "--"
slownik["05-01"] = "poczatekMaja"
slownik["05-02"] = "poczatekMaja"
slownik["05-03"] = "poczatekMaja"
slownik["05-04"] = "poczatekMaja"
slownik["02-14"] = "walentynki"
slownik["12-27"] = "koniecRoku"
slownik["12-28"] = "koniecRoku"
slownik["12-29"] = "koniecRoku"
slownik["12-30"] = "koniecRoku"
slownik["06-01"] = "swietoDzieci"
slownik["03-08"] = "swietoDzieci"
slownik["12-06"] = "swietoDzieci"
daneCzyste2 <- dane %>%
filter(ŁĄCZNIE > 0,
Kategoria...Data > "2012-01-01",
!is.na(Klient.indywidualny)) %>%
mutate(miesiac_ = factor(substr(Kategoria...Data, 6,7)),
dzienTygodnia_ = factor(factor(wday(ymd(Kategoria...Data), label=TRUE), labels=c("Sun", "Other", "Other","Other", "Fri", "Sat")), levels=c("Other", "Fri", "Sat", "Sun"), ordered=FALSE),
pokazow = 10 - is.na(Pokaz.PLA.9) - is.na(Pokaz.PLA.10),
biletowNaSeansIndywidualni = pmin(Klient.indywidualny/pokazow, 140),
ferie_ = factor(mazowieckie + 2*(łódzkie) + 3*(małopolskie), labels=c("--", "mazowieckie", "lodzkie", "malopolskie")),
datySpecjalne_ = factor(slownik[substr(Kategoria...Data, 6,10)]))
modelKalendarzowy <- lm(biletowNaSeansIndywidualni ~ dzienTygodnia_*(miesiac_ + ferie_ + datySpecjalne_), data=daneCzyste2)
ff <- dane[dane$Kategoria...Data == paste0("2012-",substr(ddzien, 6,10)),c("mazowieckie", "łódzkie", "małopolskie")]
ddzien
ndfp <- data.frame(
miesiac_ = factor(substr(ddzien, 6,7)),
dzienTygodnia_ = factor(wday(ymd(ddzien)),
levels=1:7, labels=c("Sun", "Other", "Other", "Other","Other", "Fri", "Sat")),
datySpecjalne_ = factor(slownik[substr(ddzien, 6,10)]),
ferie_ = factor(t(t(ff)) %*% c(1,2,3),
levels=0:3,
labels=c("--", "mazowieckie", "lodzkie", "malopolskie"))
)
miesiac_ = factor(substr(ddzien, 6,7))
factor(wday(ymd(ddzien)),
levels=1:7, labels=c("Sun", "Other", "Other", "Other","Other", "Fri", "Sat"))
factor(slownik[substr(ddzien, 6,10)])
slownik
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
colnames(seanse)
input
stytul <- input$seans
daneCzyste2 <- seanse %>%
filter(Tytuł == stytul)
head(daneCzyste2)
sum(is.na(daneCzyste2$Klient.indywidualny))
shiny::runApp()
shiny::runApp()
stytul
daneCzyste2 <- seanse %>%
filter(Tytuł == stytul,
Data > "2012-01-01",
!is.na(Klient.indywidualny)) %>%
mutate(miesiac_ = factor(substr(Data, 6,7)),
dzienTygodnia_ = factor(factor(wday(ymd(Data), label=TRUE), labels=c("Sun", "Other", "Other","Other", "Fri", "Sat")), levels=c("Other", "Fri", "Sat", "Sun"), ordered=FALSE),
datySpecjalne_ = factor(slownik[substr(Data, 6,10)]))
wday(ymd(Data)
wday(ymd(deanse$Data))
wday(ymd(seanse$Data))
table(wday(ymd(seanse$Data)))
stytul <- input$seansB
daneCzyste2 <- seanse %>%
filter(Tytuł == stytul,
Data > "2012-01-01",
!is.na(Klient.indywidualny)) %>%
mutate(miesiac_ = factor(substr(Data, 6,7)),
dzienTygodnia_ = factor(factor(wday(ymd(Data), label=TRUE), labels=c("Sun", "Other", "Other", "Other","Other", "Fri", "Sat")), levels=c("Other", "Fri", "Sat", "Sun"), ordered=FALSE),
datySpecjalne_ = factor(slownik[substr(Data, 6,10)]))
modelKalendarzowyB <- lm(Klient.indywidualny ~ dzienTygodnia_*(miesiac_ + datySpecjalne_), data=daneCzyste2)
daneCzyste2 <- seanse %>%
filter(Tytuł == stytul,
Data > "2012-01-01",
!is.na(Klient.indywidualny))
stytul <- input$seans
daneCzyste2 <- seanse %>%
filter(Tytuł == stytul,
Data > "2012-01-01",
!is.na(Klient.indywidualny))
seanse$Data
daneCzyste2 <- seanse %>%
mutate(Data = as.character(Data))
daneCzyste2 <- seanse %>%
mutate(Data = as.character(Data)) %>%
filter(Tytuł == stytul,
Data > "2012-01-01",
!is.na(Klient.indywidualny)) %>%
mutate(miesiac_ = factor(substr(Data, 6,7)),
dzienTygodnia_ = factor(factor(wday(ymd(Data), label=TRUE), labels=c("Sun", "Other", "Other", "Other","Other", "Fri", "Sat")), levels=c("Other", "Fri", "Sat", "Sun"), ordered=FALSE),
datySpecjalne_ = factor(slownik[substr(Data, 6,10)]))
table(wday(ymd(seanse$Data), label=TRUE))
daneCzyste2 <- seanse %>%
mutate(Data = as.character(Data)) %>%
filter(Tytuł == stytul,
Data > "2012-01-01",
!is.na(Klient.indywidualny)) %>%
mutate(miesiac_ = factor(substr(Data, 6,7)),
dzienTygodnia_ = factor(factor(wday(ymd(Data)), levels=1:7,labels=c("Sun", "Other", "Other", "Other","Other", "Fri", "Sat")), levels=c("Other", "Fri", "Sat", "Sun"), ordered=FALSE),
datySpecjalne_ = factor(slownik[substr(Data, 6,10)]))
daneCzyste2
daneCzyste2 <- seanse %>%
mutate(Data = as.character(ymd(as.character(Data)))) %>%
filter(Tytuł == stytul,
Data > "2012-01-01",
!is.na(Klient.indywidualny)) %>%
mutate(miesiac_ = factor(substr(Data, 6,7)),
dzienTygodnia_ = factor(factor(wday(ymd(Data)), levels=1:7,labels=c("Sun", "Other", "Other", "Other","Other", "Fri", "Sat")), levels=c("Other", "Fri", "Sat", "Sun"), ordered=FALSE),
datySpecjalne_ = factor(slownik[substr(Data, 6,10)]))
tail(daneCzyste2)
modelKalendarzowyB <- lm(Klient.indywidualny ~ dzienTygodnia_*(miesiac_ + datySpecjalne_), data=daneCzyste2)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
colnames(daneCzyste)
head(swieta)
head(wizyty)
head(reklamy)
library(gdata)
read.xls("Kalendarz - 23-10-2014.xlsx", 1) -> ndat
dim(ndat)
colnames(ndat)
rownames(ndat)
ndat[1:5,1:5]
dim(dane)
dim(ndat)
library(gdata)
dane <- read.xls("~/GitHub/TechnikiWizualizacjiDanych/MINI_MIMUW_2014//materialy_z_wykladow_i_lab//untitled folder//Untitled 2.xlsx")
dane <- read.xls("~/GitHub/TechnikiWizualizacjiDanych/MINI_MIMUW_2014//materialy_z_wykladow_i_lab//untitled folder//Untitled 2.xlsx", 1)
head(dane)
dane[1,1]
strsplit(as.character(dane[1,1]), split="\\n")
strsplit(strsplit(as.character(dane[1,1]), split="\\n")[[1]], split=": ")
sapply(strsplit(strsplit(as.character(dane[1,1]), split="\\n")[[1]], split=": "), '[', 2)
sapply(1:nrow(dane), function(i){
sapply(strsplit(strsplit(as.character(dane[i,1]), split="\\n")[[1]], split=": "), '[', 2)
})
dat <- sapply(1:nrow(dane), function(i){
sapply(strsplit(strsplit(as.character(dane[i,1]), split="\\n")[[1]], split=": "), '[', 2)
})
t(dat)
sapply(strsplit(strsplit(as.character(dane[i,1]), split="\\n")[[1]], split=": "), '[', 1)
sapply(strsplit(strsplit(as.character(dane[1,1]), split="\\n")[[1]], split=": "), '[', 1)
cn <- sapply(strsplit(strsplit(as.character(dane[1,1]), split="\\n")[[1]], split=": "), '[', 1)
dane <- t(dat)
colnames(dane) <- cn
head(dane)
gsub(dane[,6], pattern=",", replacement="")
dane[,6]
as.numeric(gsub(dane[,6], pattern=",", replacement=""))
dane <- as.data.frame(dane)
dane[,6] <- as.numeric(gsub(dane[,6], pattern=",", replacement=""))
head(dane)
summary(dane)
setwd("~/GitHub/TechnikiWizualizacjiDanych/MINI_MIMUW_2014//materialy_z_wykladow_i_lab//untitled folder//")
save(dane, file="dane.rda")
setwd("..")
